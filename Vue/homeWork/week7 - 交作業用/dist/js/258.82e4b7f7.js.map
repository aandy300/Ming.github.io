{"version":3,"file":"js/258.82e4b7f7.js","mappings":"mHAuCCA,GAOA,MAAO,CAKNA,IAPDA,EAAMA,GAAO,IAAIC,IAehBC,GAAAA,SAA6BC,EAAWC,GACvC,IAAMC,EAAmDL,EAAKM,IAAIH,GAC9DE,EACHA,EAASE,KAAKH,GAGdJ,EAAKQ,IAAIL,EAAM,CAACC,KAWlBK,IAAAA,SAA8BN,EAAWC,GACxC,IAAMC,EAAmDL,EAAKM,IAAIH,GAC9DE,IACCD,EACHC,EAASK,OAAOL,EAASM,QAAQP,KAAa,EAAG,GAGjDJ,EAAKQ,IAAIL,EAAM,MAelBS,KAAAA,SAA+BT,EAAWU,GACzC,IAAIR,EAAWL,EAAKM,IAAIH,GACpBE,GACFA,EACCS,QACAC,KAAI,SAACX,GACLA,EAAQS,OAIXR,EAAWL,EAAKM,IAAI,OAElBD,EACCS,QACAC,KAAI,SAACX,GACLA,EAAQD,EAAMU,Q,gCC/GpB,MAAMG,EAAUC,IAEhB,S,uMCHIC,EAAAA,EAAAA,IAAyBC,IACzBD,EAAAA,EAAAA,IAA2BE,IAA3B,I,uBCDKC,MAAM,iD,GACFA,MAAM,mB,GACkCC,EAAAA,EAAAA,GAAW,UAAP,MAAE,G,GAC/CA,EAAAA,EAAAA,GAES,UAFDD,MAAM,iBAAiBlB,KAAK,SAAS,iBAAe,WAAW,iBAAe,aAAa,gBAAc,YAAY,gBAAc,QAAQ,aAAW,qBAA9J,EACAmB,EAAAA,EAAAA,GAAyC,QAAnCD,MAAM,0BADZ,G,GAGKA,MAAM,2BAA2BE,GAAG,a,GACrCF,MAAM,c,GACFA,MAAM,Y,WAC2C,M,GAEjDA,MAAM,Y,WACwC,Q,GAE9CA,MAAM,Y,WACoC,O,GAQ9ClB,KAAK,SAASkB,MAAM,mB,WAAkB,Q,GAEpCA,MAAM,gC,0EAzBpBG,EAAAA,EAAAA,IA6BM,MA7BN,EA6BM,EA5BFF,EAAAA,EAAAA,GAqBM,MArBN,EAqBM,EApBFJ,EAAAA,EAAAA,IAAkEO,EAAA,CAArDJ,MAAM,eAAeK,GAAG,KAArC,C,kBAAyC,IAAW,CAAXC,K,MACzCC,GAGAN,EAAAA,EAAAA,GAeM,MAfN,EAeM,EAdNA,EAAAA,EAAAA,GAaK,KAbL,EAaK,EAZDA,EAAAA,EAAAA,GAEK,KAFL,EAEK,EADDJ,EAAAA,EAAAA,IAAiEO,EAAA,CAApDJ,MAAM,WAAWK,GAAG,gBAAjC,C,kBAAiD,IAAE,M,SAEvDJ,EAAAA,EAAAA,GAEK,KAFL,EAEK,EADDJ,EAAAA,EAAAA,IAAgEO,EAAA,CAAnDJ,MAAM,WAAWK,GAAG,aAAjC,C,kBAA8C,IAAI,M,SAEtDJ,EAAAA,EAAAA,GAEK,KAFL,EAEK,EADDJ,EAAAA,EAAAA,IAA2DO,EAAA,CAA9CJ,MAAM,WAAWK,GAAG,SAAjC,C,kBAA0C,IAAG,M,eAQzDJ,EAAAA,EAAAA,GAKS,SALT,EAKS,IAHLA,EAAAA,EAAAA,GAA8E,OAA9E,GAA8EO,EAAAA,EAAAA,IAA/BC,EAAAA,SAASC,MAAMC,QAAM,O,aAWhF,GACIC,OACI,MAAO,CACHC,SAAU,CACNH,MAAO,MAInBI,QAAS,CACLC,UACEC,KAAKC,MAAMhC,IAAK,4DACbiC,MAAMC,IACLH,KAAKH,SAAWM,EAAIP,KAAKA,KACzBQ,QAAQC,IAAI,YAAaF,MAE1BG,OAAOC,IACNC,MAAMD,EAAIX,KAAKa,cAIzBC,UACIV,KAAKD,UAELpB,EAAAA,EAAAA,GAAW,YAAY,KACnBqB,KAAKD,e,QCxDjB,MAAMY,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,KAEpE,QFAA,GACIC,WAAY,CACRC,WAAAA,IGJR,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE","sources":["webpack://week6/../src/index.ts","webpack://week6/./src/libs/emitter.js","webpack://week6/./src/views/FrontView.vue","webpack://week6/./src/components/FrontNavbar.vue","webpack://week6/./src/components/FrontNavbar.vue?6e20","webpack://week6/./src/views/FrontView.vue?9526"],"sourcesContent":["export type EventType = string | symbol;\n\n// An event handler can take an optional event argument\n// and should not return a value\nexport type Handler<T = unknown> = (event: T) => void;\nexport type WildcardHandler<T = Record<string, unknown>> = (\n\ttype: keyof T,\n\tevent: T[keyof T]\n) => void;\n\n// An array of all currently registered event handlers for a type\nexport type EventHandlerList<T = unknown> = Array<Handler<T>>;\nexport type WildCardEventHandlerList<T = Record<string, unknown>> = Array<WildcardHandler<T>>;\n\n// A map of event types and their corresponding event handlers.\nexport type EventHandlerMap<Events extends Record<EventType, unknown>> = Map<\n\tkeyof Events | '*',\n\tEventHandlerList<Events[keyof Events]> | WildCardEventHandlerList<Events>\n>;\n\nexport interface Emitter<Events extends Record<EventType, unknown>> {\n\tall: EventHandlerMap<Events>;\n\n\ton<Key extends keyof Events>(type: Key, handler: Handler<Events[Key]>): void;\n\ton(type: '*', handler: WildcardHandler<Events>): void;\n\n\toff<Key extends keyof Events>(type: Key, handler?: Handler<Events[Key]>): void;\n\toff(type: '*', handler: WildcardHandler<Events>): void;\n\n\temit<Key extends keyof Events>(type: Key, event: Events[Key]): void;\n\temit<Key extends keyof Events>(type: undefined extends Events[Key] ? Key : never): void;\n}\n\n/**\n * Mitt: Tiny (~200b) functional event emitter / pubsub.\n * @name mitt\n * @returns {Mitt}\n */\nexport default function mitt<Events extends Record<EventType, unknown>>(\n\tall?: EventHandlerMap<Events>\n): Emitter<Events> {\n\ttype GenericEventHandler =\n\t\t| Handler<Events[keyof Events]>\n\t\t| WildcardHandler<Events>;\n\tall = all || new Map();\n\n\treturn {\n\n\t\t/**\n\t\t * A Map of event names to registered handler functions.\n\t\t */\n\t\tall,\n\n\t\t/**\n\t\t * Register an event handler for the given type.\n\t\t * @param {string|symbol} type Type of event to listen for, or `'*'` for all events\n\t\t * @param {Function} handler Function to call in response to given event\n\t\t * @memberOf mitt\n\t\t */\n\t\ton<Key extends keyof Events>(type: Key, handler: GenericEventHandler) {\n\t\t\tconst handlers: Array<GenericEventHandler> | undefined = all!.get(type);\n\t\t\tif (handlers) {\n\t\t\t\thandlers.push(handler);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tall!.set(type, [handler] as EventHandlerList<Events[keyof Events]>);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Remove an event handler for the given type.\n\t\t * If `handler` is omitted, all handlers of the given type are removed.\n\t\t * @param {string|symbol} type Type of event to unregister `handler` from, or `'*'`\n\t\t * @param {Function} [handler] Handler function to remove\n\t\t * @memberOf mitt\n\t\t */\n\t\toff<Key extends keyof Events>(type: Key, handler?: GenericEventHandler) {\n\t\t\tconst handlers: Array<GenericEventHandler> | undefined = all!.get(type);\n\t\t\tif (handlers) {\n\t\t\t\tif (handler) {\n\t\t\t\t\thandlers.splice(handlers.indexOf(handler) >>> 0, 1);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tall!.set(type, []);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invoke all handlers for the given type.\n\t\t * If present, `'*'` handlers are invoked after type-matched handlers.\n\t\t *\n\t\t * Note: Manually firing '*' handlers is not supported.\n\t\t *\n\t\t * @param {string|symbol} type The event type to invoke\n\t\t * @param {Any} [evt] Any value (object is recommended and powerful), passed to each handler\n\t\t * @memberOf mitt\n\t\t */\n\t\temit<Key extends keyof Events>(type: Key, evt?: Events[Key]) {\n\t\t\tlet handlers = all!.get(type);\n\t\t\tif (handlers) {\n\t\t\t\t(handlers as EventHandlerList<Events[keyof Events]>)\n\t\t\t\t\t.slice()\n\t\t\t\t\t.map((handler) => {\n\t\t\t\t\t\thandler(evt!);\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\thandlers = all!.get('*');\n\t\t\tif (handlers) {\n\t\t\t\t(handlers as WildCardEventHandlerList<Events>)\n\t\t\t\t\t.slice()\n\t\t\t\t\t.map((handler) => {\n\t\t\t\t\t\thandler(type, evt!);\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n}\n","import mitt from 'mitt'\r\n\r\nconst emitter = mitt()\r\n\r\nexport default emitter\r\n","<template>\r\n    <FontNavbar></FontNavbar>\r\n    <router-view></router-view>\r\n</template>\r\n\r\n<script>\r\n    import FontNavbar from '@/components/FrontNavbar.vue'\r\nexport default {\r\n    components: {\r\n        FontNavbar\r\n    }\r\n}\r\n</script>\r\n","<template>\r\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <div class=\"container-fluid\">\r\n            <router-link class=\"navbar-brand\" to=\"/\"><h2>首頁</h2></router-link>\r\n            <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul class=\"navbar-nav\">\r\n                <li class=\"nav-item\">\r\n                    <router-link class=\"nav-link\" to=\"/admin/login\" >後台</router-link>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <router-link class=\"nav-link\" to=\"/products\" >商品列表</router-link>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <router-link class=\"nav-link\" to=\"/cart\" >購物車</router-link>\r\n                </li>\r\n                <!-- <li class=\"nav-item\">\r\n                <a class=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\r\n                </li> -->\r\n            </ul>\r\n            </div>\r\n        </div>\r\n        <button type=\"button\" class=\"btn btn-primary\">\r\n            結帳\r\n            <span class=\"badge  rounded-pill bg-danger\">{{ cartData.carts.length }}</span>\r\n            <!-- 抓不到結構解法 ? 版本 -->\r\n            <!-- <span class=\"badge  rounded-pill bg-danger\">{{ cartData?.carts?.length }}</span> -->\r\n        </button>\r\n    </nav>\r\n</template>\r\n\r\n<script>\r\n\r\nimport emitter from '@/libs/emitter'\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            cartData: {\r\n                carts: []\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        getCart() {\r\n          this.$http.get(`${process.env.VUE_APP_url}/api/${process.env.VUE_APP_path}/cart`)\r\n            .then((res) => {\r\n              this.cartData = res.data.data\r\n              console.log('getCart()', res)\r\n            })\r\n            .catch((err) => {\r\n              alert(err.data.message)\r\n            })\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getCart()\r\n        // 監聽目標 get-cart 觸發時 執行以下\r\n        emitter.on('get-cart', () => {\r\n            this.getCart()\r\n        })\r\n    }\r\n}\r\n</script>\r\n","import { render } from \"./FrontNavbar.vue?vue&type=template&id=1d0f496e\"\nimport script from \"./FrontNavbar.vue?vue&type=script&lang=js\"\nexport * from \"./FrontNavbar.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\admin\\\\Desktop\\\\Coding\\\\Learn-Code\\\\Ming_github_io\\\\Vue\\\\homeWork\\\\week7 - 交作業用\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./FrontView.vue?vue&type=template&id=bd76040a\"\nimport script from \"./FrontView.vue?vue&type=script&lang=js\"\nexport * from \"./FrontView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\admin\\\\Desktop\\\\Coding\\\\Learn-Code\\\\Ming_github_io\\\\Vue\\\\homeWork\\\\week7 - 交作業用\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["all","Map","on","type","handler","handlers","get","push","set","off","splice","indexOf","emit","evt","slice","map","emitter","mitt","_createVNode","_component_FontNavbar","_component_router_view","class","_createElementVNode","id","_createElementBlock","_component_router_link","to","_hoisted_3","_hoisted_4","_toDisplayString","$data","carts","length","data","cartData","methods","getCart","this","$http","then","res","console","log","catch","err","alert","message","mounted","__exports__","components","FontNavbar","render"],"sourceRoot":""}