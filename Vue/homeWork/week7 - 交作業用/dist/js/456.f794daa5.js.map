{"version":3,"file":"js/456.f794daa5.js","mappings":"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","sources":["webpack://week6/../src/index.ts","webpack://week6/./src/libs/emitter.js","webpack://week6/./src/views/CartView.vue","webpack://week6/./src/views/CartView.vue?73a2"],"sourcesContent":["export type EventType = string | symbol;\n\n// An event handler can take an optional event argument\n// and should not return a value\nexport type Handler<T = unknown> = (event: T) => void;\nexport type WildcardHandler<T = Record<string, unknown>> = (\n\ttype: keyof T,\n\tevent: T[keyof T]\n) => void;\n\n// An array of all currently registered event handlers for a type\nexport type EventHandlerList<T = unknown> = Array<Handler<T>>;\nexport type WildCardEventHandlerList<T = Record<string, unknown>> = Array<WildcardHandler<T>>;\n\n// A map of event types and their corresponding event handlers.\nexport type EventHandlerMap<Events extends Record<EventType, unknown>> = Map<\n\tkeyof Events | '*',\n\tEventHandlerList<Events[keyof Events]> | WildCardEventHandlerList<Events>\n>;\n\nexport interface Emitter<Events extends Record<EventType, unknown>> {\n\tall: EventHandlerMap<Events>;\n\n\ton<Key extends keyof Events>(type: Key, handler: Handler<Events[Key]>): void;\n\ton(type: '*', handler: WildcardHandler<Events>): void;\n\n\toff<Key extends keyof Events>(type: Key, handler?: Handler<Events[Key]>): void;\n\toff(type: '*', handler: WildcardHandler<Events>): void;\n\n\temit<Key extends keyof Events>(type: Key, event: Events[Key]): void;\n\temit<Key extends keyof Events>(type: undefined extends Events[Key] ? Key : never): void;\n}\n\n/**\n * Mitt: Tiny (~200b) functional event emitter / pubsub.\n * @name mitt\n * @returns {Mitt}\n */\nexport default function mitt<Events extends Record<EventType, unknown>>(\n\tall?: EventHandlerMap<Events>\n): Emitter<Events> {\n\ttype GenericEventHandler =\n\t\t| Handler<Events[keyof Events]>\n\t\t| WildcardHandler<Events>;\n\tall = all || new Map();\n\n\treturn {\n\n\t\t/**\n\t\t * A Map of event names to registered handler functions.\n\t\t */\n\t\tall,\n\n\t\t/**\n\t\t * Register an event handler for the given type.\n\t\t * @param {string|symbol} type Type of event to listen for, or `'*'` for all events\n\t\t * @param {Function} handler Function to call in response to given event\n\t\t * @memberOf mitt\n\t\t */\n\t\ton<Key extends keyof Events>(type: Key, handler: GenericEventHandler) {\n\t\t\tconst handlers: Array<GenericEventHandler> | undefined = all!.get(type);\n\t\t\tif (handlers) {\n\t\t\t\thandlers.push(handler);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tall!.set(type, [handler] as EventHandlerList<Events[keyof Events]>);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Remove an event handler for the given type.\n\t\t * If `handler` is omitted, all handlers of the given type are removed.\n\t\t * @param {string|symbol} type Type of event to unregister `handler` from, or `'*'`\n\t\t * @param {Function} [handler] Handler function to remove\n\t\t * @memberOf mitt\n\t\t */\n\t\toff<Key extends keyof Events>(type: Key, handler?: GenericEventHandler) {\n\t\t\tconst handlers: Array<GenericEventHandler> | undefined = all!.get(type);\n\t\t\tif (handlers) {\n\t\t\t\tif (handler) {\n\t\t\t\t\thandlers.splice(handlers.indexOf(handler) >>> 0, 1);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tall!.set(type, []);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invoke all handlers for the given type.\n\t\t * If present, `'*'` handlers are invoked after type-matched handlers.\n\t\t *\n\t\t * Note: Manually firing '*' handlers is not supported.\n\t\t *\n\t\t * @param {string|symbol} type The event type to invoke\n\t\t * @param {Any} [evt] Any value (object is recommended and powerful), passed to each handler\n\t\t * @memberOf mitt\n\t\t */\n\t\temit<Key extends keyof Events>(type: Key, evt?: Events[Key]) {\n\t\t\tlet handlers = all!.get(type);\n\t\t\tif (handlers) {\n\t\t\t\t(handlers as EventHandlerList<Events[keyof Events]>)\n\t\t\t\t\t.slice()\n\t\t\t\t\t.map((handler) => {\n\t\t\t\t\t\thandler(evt!);\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\thandlers = all!.get('*');\n\t\t\tif (handlers) {\n\t\t\t\t(handlers as WildCardEventHandlerList<Events>)\n\t\t\t\t\t.slice()\n\t\t\t\t\t.map((handler) => {\n\t\t\t\t\t\thandler(type, evt!);\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n}\n","import mitt from 'mitt'\r\n\r\nconst emitter = mitt()\r\n\r\nexport default emitter\r\n","<template>\r\n  <h2>購物車</h2>\r\n  <table class=\"table align-middle\">\r\n    <thead>\r\n      <tr>\r\n        <th>圖片</th>\r\n        <th>商品名稱</th>\r\n        <th>價格</th>\r\n        <th></th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr v-for=\"item in products\" :key=\"item.id\">\r\n        <td style=\"width: 200px\">\r\n          <div\r\n            :style=\"{ backgroundImage: `url( ${item.imageUrl})` }\"\r\n            style=\"\r\n              height: 100px;\r\n              background-size: cover;\r\n              background-position: center;\r\n            \"\r\n          ></div>\r\n        </td>\r\n        <td>\r\n          {{ item.title }}\r\n        </td>\r\n        <td>\r\n          <div v-if=\"item.price == item.origin_price\">\r\n            <div class=\"h5\">{{ item.price }} 元</div>\r\n          </div>\r\n          <div v-else>\r\n            <del class=\"h6\">原價 {{ item.origin_price }} 元</del>\r\n            <div class=\"h5\">現在只要 {{ item.price }} 元</div>\r\n          </div>\r\n        </td>\r\n        <td>\r\n          <div class=\"btn-group btn-group-sm\">\r\n            <button\r\n              @click=\"openProductMoadl(item.id)\"\r\n              type=\"button\"\r\n              class=\"btn btn-outline-secondary\"\r\n            >\r\n              查看更多\r\n            </button>\r\n            <button\r\n              @click=\"addToCart(item.id)\"\r\n              type=\"button\"\r\n              class=\"btn btn-outline-danger\"\r\n            >\r\n              加到購物車\r\n            </button>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</template>\r\n\r\n<script>\r\n\r\nimport emitter from '@/libs/emitter'\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            cartData: {},\r\n            products: []\r\n        }\r\n    },\r\n    methods: {\r\n        // rules 中可自訂函式來驗證結果 - 使用 v-bind 綁定 :rules=\"isPhone\"\r\n        // 正則表達來自定規則\r\n        isPhone(value) {\r\n        const phoneNumber = /^(09)[0-9]{8}$/\r\n        return phoneNumber.test(value) ? true : '需要正確的電話號碼' // phoneNumber.test(外面表單輸入的值?) ? true的結果 : false的結果 嗎\r\n        },\r\n        getData() {\r\n        this.$http.get(`${process.env.VUE_APP_url}/api/${process.env.VUE_APP_path}/products/all`)\r\n            .then((res) => {\r\n            this.products = res.data.products\r\n            console.log('getData()', res)\r\n            })\r\n            .catch((err) => {\r\n            alert(err.data.message)\r\n            })\r\n        },\r\n\r\n        addToCart(id, qty = 1) {\r\n        const data = {\r\n            product_id: id,\r\n            qty\r\n        }\r\n        // :disabled用\r\n        // this.isLoadingItem = id\r\n        this.$http.post(`${process.env.VUE_APP_url}/api/${process.env.VUE_APP_path}/cart`, { data })\r\n            .then((res) => {\r\n            console.log('addToCart()', res)\r\n            emitter.emit('get-cart')\r\n            })\r\n            .catch((err) => {\r\n            alert(err.data.message)\r\n            })\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getData()\r\n    }\r\n}\r\n</script>\r\n","import { render } from \"./CartView.vue?vue&type=template&id=17a8e220\"\nimport script from \"./CartView.vue?vue&type=script&lang=js\"\nexport * from \"./CartView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\admin\\\\Desktop\\\\Coding\\\\Learn-Code\\\\Ming_github_io\\\\Vue\\\\homeWork\\\\week7 - 交作業用\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["all","Map","on","type","handler","handlers","get","push","set","off","splice","indexOf","emit","evt","slice","map","emitter","mitt","_createElementVNode","class","style","_hoisted_1","_hoisted_3","_createElementBlock","_Fragment","_renderList","$data","item","key","id","backgroundImage","imageUrl","_toDisplayString","title","price","origin_price","_hoisted_5","_hoisted_7","onClick","_ctx","_hoisted_11","$options","_hoisted_12","data","cartData","products","methods","isPhone","value","phoneNumber","test","getData","this","$http","then","res","console","log","catch","err","alert","message","addToCart","qty","product_id","post","mounted","__exports__","render"],"sourceRoot":""}